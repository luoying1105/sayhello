# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import grpc_server.views.helloworld_pb2 as helloworld__pb2


class GreeterStub(object):
    # missing associated documentation comment in .proto file
    pass

    def __init__(self, channel):
        """Constructor.

        Args:
          channel: A grpc.Channel.
        """
        self.SayHello = channel.unary_unary(
            '/Greeter/SayHello',
            request_serializer=helloworld__pb2.HelloRequest.SerializeToString,
            response_deserializer=helloworld__pb2.HelloReply.FromString,
        )
        self.SayHelloAgain = channel.unary_unary(
            '/Greeter/SayHelloAgain',
            request_serializer=helloworld__pb2.HelloRequest.SerializeToString,
            response_deserializer=helloworld__pb2.HelloReply.FromString,
        )
        self.query = channel.unary_unary(
            '/Greeter/query',
            request_serializer=helloworld__pb2.HelloRequest.SerializeToString,
            response_deserializer=helloworld__pb2.HelloReply.FromString,
        )
        self.ListFeature = channel.unary_stream(
            '/Greeter/ListFeature',
            request_serializer=helloworld__pb2.HelloRequest.SerializeToString,
            response_deserializer=helloworld__pb2.MessageInfo.FromString,
        )


class GreeterServicer(object):
    # missing associated documentation comment in .proto file
    pass

    def SayHello(self, request, context):
        """一个 简单 RPC ， 客户端使用存根发送请求到服务器并等待响应返回，就像平常的函数调用一样。
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SayHelloAgain(self, request, context):
        # missing associated documentation comment in .proto file
        pass
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def query(self, request, context):
        # missing associated documentation comment in .proto file
        pass
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListFeature(self, request, context):
        """server2client stream rpc 服务器返回这个范围内的信息
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_GreeterServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'SayHello': grpc.unary_unary_rpc_method_handler(
            servicer.SayHello,
            request_deserializer=helloworld__pb2.HelloRequest.FromString,
            response_serializer=helloworld__pb2.HelloReply.SerializeToString,
        ),
        'SayHelloAgain': grpc.unary_unary_rpc_method_handler(
            servicer.SayHelloAgain,
            request_deserializer=helloworld__pb2.HelloRequest.FromString,
            response_serializer=helloworld__pb2.HelloReply.SerializeToString,
        ),
        'query': grpc.unary_unary_rpc_method_handler(
            servicer.query,
            request_deserializer=helloworld__pb2.HelloRequest.FromString,
            response_serializer=helloworld__pb2.HelloReply.SerializeToString,
        ),
        'ListFeature': grpc.unary_stream_rpc_method_handler(
            servicer.ListFeature,
            request_deserializer=helloworld__pb2.HelloRequest.FromString,
            response_serializer=helloworld__pb2.MessageInfo.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        'Greeter', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
